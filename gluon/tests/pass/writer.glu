let prelude = import! std.prelude
let { (<|) } = import! std.function
let list @ { ? } = import! std.list
let { Writer, ? }  = import! std.writer
let { Test, run_raw, assert, assert_eq, test, ? }  = import! std.test
let { Applicative, (*>), ? } = import! std.applicative
let { count } = import! std.foldable

let { run_pure, ? } = import! std.effect

let failed_tests =
    run_pure <| run_raw (
        assert_eq 1 1
            *> assert_eq 1 2
            *> assert_eq 1 1
            *> assert_eq 1.0 10.0
    )

test "writer" <| \_ -> (assert_eq (count failed_tests) 2)
