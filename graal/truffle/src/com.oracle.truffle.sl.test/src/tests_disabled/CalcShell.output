available commands:
x: exit
c: define the calculation function with the parameters prev, cur, and i
   prev and cur start with 0; i is the loop variable from 0 to n
     example: 'return cur + i;' computes the sum of 1 to n
     example: 'if (i == 0) { return 1; } else { return cur * i; }' computes the factorial of i
     example: 'if (i <= 2) { return 1; } else { return prev + cur; }' computes the nth Fibonacci number
i: define the number of iterations, i.e, the number n in the examples above
r: Run the calculation loop often, and print the first and last result
t: Run the calculation loop a couple of time, and print timing information for each run
h: Print this help message

cmd>
n>
cmd>
function>
cmd>
** first: 3240
** last:  3240
cmd>
function>
cmd>
** first: 23416728348467685
** last:  23416728348467685
cmd>
n>
cmd>
** first: 55
** last:  55
cmd>
function>
cmd>
** first: 3628800
** last:  3628800
cmd>
