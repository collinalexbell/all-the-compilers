#
# Copyright (c) 2018, Oracle and/or its affiliates.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
# conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list of
# conditions and the following disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used to
# endorse or promote products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

BREAK 106 CONTINUE "start"
    OPEN_SCOPE
        MEMBER structured "union pointerUnion" "myPointerUnion"
            MEMBER int "short" "a" "255"
            MEMBER int "int" "b" "255"
            MEMBER address "int*" "c" "0xffffffff000000ff"
        END_MEMBERS
        MEMBER structured "union simpleUnion" "mySimpleUnion"
            MEMBER int "int" "a" "256"
            MEMBER int "int" "b" "256"
            MEMBER int "int" "c" "256"
        END_MEMBERS
        MEMBER structured "union doubleUnion" "myDoubleUnion"
            MEMBER float32 "float" "a" "0.0"
            MEMBER float64 "double" "b" "0.0"
            MEMBER int "int" "c" "0"
            MEMBER float64 "double" "d" "0.0"
        END_MEMBERS
        MEMBER structured "union floatUnion" "myFloatUnion"
            MEMBER float32 "float" "a" "0.0"
            MEMBER int "short" "b" "0"
            MEMBER int "short" "c" "0"
            MEMBER float32 "float" "d" "0.0"
        END_MEMBERS
    OPEN_SCOPE
        MEMBER structured "union simpleUnion" "myGlobalSimpleUnion"
            MEMBER int "int" "a" "512"
            MEMBER int "int" "b" "512"
            MEMBER int "int" "c" "512"
        END_MEMBERS
        MEMBER structured "union floatUnion" "myGlobalFloatUnion"
            MEMBER float32 "float" "a" "0.0"
            MEMBER int "short" "b" "0"
            MEMBER int "short" "c" "0"
            MEMBER float32 "float" "d" "0.0"
        END_MEMBERS
        MEMBER structured "union pointerUnion" "myGlobalPointerUnion"
            MEMBER int "short" "a" "-12817"
            MEMBER int "int" "b" "11259375"
            MEMBER address "int*" "c" "0xabcdef"
        END_MEMBERS
        MEMBER structured "union doubleUnion" "myGlobalDoubleUnion"
            MEMBER float32 "float" "a" "0.0"
            MEMBER float64 "double" "b" "0.0"
            MEMBER int "int" "c" "0"
            MEMBER float64 "double" "d" "0.0"
        END_MEMBERS


