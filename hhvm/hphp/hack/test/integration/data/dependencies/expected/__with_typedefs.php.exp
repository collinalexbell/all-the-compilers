<?hh

interface I1 {}

class A0 {}

class A extends \A0 implements \I1 {}

class B implements \I1 {}

class C extends \A {}

type Complex = shape('first' => int, 'second' => \B);

newtype Point = shape('x' => int, 'y' => int);

function with_typedefs(Complex $c, shape('x' => int, 'y' => C) $pair): Point {
  return shape('x' => $pair['x'], 'y' => $c['first']);
}
