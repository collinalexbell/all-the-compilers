<?hh

namespace Test1 {
  class A {}

  function f(int $x): \Test1\A {
    throw new \Exception();
  }

  namespace NestedTest {
    class A extends \Test1\NestedTest\UltraNested\B {}

    function g(int $x): \Test1\NestedTest\A {
      throw new \Exception();
    }

    namespace UltraNested {
      class B {}

      function noop(): void {
        throw new \Exception();
      }
    }
  }
}
namespace Test2 {
  function f(int $x): \Test1\A {
    throw new \Exception();
  }
}
namespace Ns {
  function same_name_different_namespaces(int $x): int {
    \Test1\NestedTest\g($x);
    \Test1\NestedTest\UltraNested\noop();
    if ($x < 0) {
      \Test1\f($x);
      return $x;
    } else {
      \Test2\f($x);
      return -$x;
    }
  }
}
