[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
        ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict;
      fd_fun =
      { f_span = [2:1-50]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((Awaitable<void>), (Some ([2:32-47], (Happly (([2:32-41], "\\HH\\Awaitable"), [([2:42-46], (Hprim Tvoid))]))))); 
        f_name = ([2:16-19], "\\err"); f_tparams = []; f_where_constraints = []; 
        f_variadic = FVnonVariadic;
        f_params =
        [{ param_annotation = ([2:27-29], string); param_type_hint = ((string), (Some ([2:20-26], (Hprim Tstring)))); 
           param_is_variadic = false; param_pos = [2:27-29]; param_name = "$x"; 
           param_expr = None; param_readonly = None; param_callconv = None; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)]; fb_annotation = () }; 
        f_fun_kind = FAsync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None }
      });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((Awaitable<int>), (Some ([3:21-35], (Happly (([3:21-30], "\\HH\\Awaitable"), [([3:31-34], (Hprim Tint))]))))); 
         f_name = ([3:16-17], "\\f"); f_tparams = []; f_where_constraints = []; 
         f_variadic = FVnonVariadic; f_params = []; f_ctxs = None; f_unsafe_ctxs = None; 
         f_body = { fb_ast = [([4:3-12], (Return (Some (([4:10-11], int), (Int "1")))))]; fb_annotation = () }; 
         f_fun_kind = FAsync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [6:1-12:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((Awaitable<int>), (Some ([6:31-45], (Happly (([6:31-40], "\\HH\\Awaitable"), [([6:41-44], (Hprim Tint))]))))); 
         f_name = ([6:16-17], "\\g"); f_tparams = []; f_where_constraints = []; 
         f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = ([6:26-28], ?string); param_type_hint = ((?string), (Some ([6:18-25], (Hoption ([6:19-25], (Hprim Tstring)))))); 
            param_is_variadic = false; param_pos = [6:26-28]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = None; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([7:3-9:4],
             (If ((([7:7-18], bool), (Binop (Eqeqeq, (([7:7-9], ?string), (Lvar ([7:7-9], $x))), (([7:14-18], null), Null)))),
                [([7:3-9:4], (AssertEnv (Refinement, {$x})));
                  ([8:5-22], (Return (Some (([8:12-21], int), (Await (([8:18-21], Awaitable<int>), (Call ((([8:18-19], (function(): Awaitable<int>)), (Id ([8:18-19], "\\f"))), [], [], None))))))))],
                [([7:3-9:4], (AssertEnv (Refinement, {$x}))); ([Pos.none], Noop)])));
             ([11:3-24],
              (Return
                 (Some (([11:10-23], void),
                        (Hole (
                           (([11:10-23], void),
                            (Await
                               (([11:16-23], Awaitable<void>),
                                (Call ((([11:16-19], (function(string $x): Awaitable<void>)), (Id ([11:16-19], "\\err"))), [], [(([11:20-22], string), (Lvar ([11:20-22], $x)))], None))))),
                           (void), (int), Typing))))))
             ];
           fb_annotation = () };
         f_fun_kind = FAsync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       })