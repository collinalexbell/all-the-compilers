[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
        ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict;
      fd_fun =
      { f_span = [3:1-31]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = ((void), (Some ([3:24-28], (Hprim Tvoid)))); 
        f_name = ([3:10-14], "\\prim"); f_tparams = []; f_where_constraints = []; 
        f_variadic = FVnonVariadic;
        f_params =
        [{ param_annotation = ([3:19-21], int); param_type_hint = ((int), (Some ([3:15-18], (Hprim Tint)))); 
           param_is_variadic = false; param_pos = [3:19-21]; param_name = "$i"; 
           param_expr = None; param_readonly = None; param_callconv = None; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None; f_body = { fb_ast = [([Pos.none], Noop)]; fb_annotation = () }; 
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None }
      });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [5:1-11:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([5:40-44], (Hprim Tvoid)))); 
         f_name = ([5:10-19], "\\call_prim"); f_tparams = []; f_where_constraints = []; 
         f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = ([5:26-28], float); param_type_hint = ((float), (Some ([5:20-25], (Hprim Tfloat)))); 
            param_is_variadic = false; param_pos = [5:26-28]; param_name = "$f"; 
            param_expr = None; param_readonly = None; param_callconv = None; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = ([5:35-37], ?int); param_type_hint = ((?int), (Some ([5:30-34], (Hoption ([5:31-34], (Hprim Tint)))))); 
             param_is_variadic = false; param_pos = [5:35-37]; param_name = "$x"; 
             param_expr = None; param_readonly = None; param_callconv = None; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([7:5-14],
             (Expr
                (([7:5-13], void),
                 (Call ((([7:5-9], (function(int $i): void)), (Id ([7:5-9], "\\prim"))), 
                    [], [(([7:10-12], float), (Hole ((([7:10-12], float), (Lvar ([7:10-12], $f))), (float), (int), Typing)))], None)))));
             ([10:5-14],
              (Expr
                 (([10:5-13], void),
                  (Call ((([10:5-9], (function(int $i): void)), (Id ([10:5-9], "\\prim"))), 
                     [], [(([10:10-12], ?int), (Hole ((([10:10-12], ?int), (Lvar ([10:10-12], $x))), (?int), (int), Typing)))], None)))))
             ];
           fb_annotation = () };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [13:1-19:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([13:45-49], (Hprim Tvoid)))); 
         f_name = ([13:10-24], "\\call_prim_cast"); f_tparams = []; f_where_constraints = []; 
         f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = ([13:31-33], float); param_type_hint = ((float), (Some ([13:25-30], (Hprim Tfloat)))); 
            param_is_variadic = false; param_pos = [13:31-33]; param_name = "$f"; 
            param_expr = None; param_readonly = None; param_callconv = None; 
            param_user_attributes = []; param_visibility = None };
           { param_annotation = ([13:40-42], ?int); param_type_hint = ((?int), (Some ([13:35-39], (Hoption ([13:36-39], (Hprim Tint)))))); 
             param_is_variadic = false; param_pos = [13:40-42]; param_name = "$x"; 
             param_expr = None; param_readonly = None; param_callconv = None; 
             param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([15:5-48],
             (Expr
                (([15:5-47], void),
                 (Call ((([15:5-9], (function(int $i): void)), (Id ([15:5-9], "\\prim"))), 
                    [], [(([15:10-46], int), (Hole ((([15:43-45], float), (Lvar ([15:43-45], $f))), (float), (int), UnsafeCast)))], None)))));
             ([18:5-47],
              (Expr
                 (([18:5-46], void),
                  (Call ((([18:5-9], (function(int $i): void)), (Id ([18:5-9], "\\prim"))), 
                     [], [(([18:10-45], int), (Hole ((([18:42-44], ?int), (Lvar ([18:42-44], $x))), (?int), (int), UnsafeCast)))], None)))))
             ];
           fb_annotation = () };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       })