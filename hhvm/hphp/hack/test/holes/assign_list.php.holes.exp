Errors:
  [17:3-42] Invalid assignment
  [17:3-19] Too few arguments (required 3 but got 2)
  [7:37-47] Definition is here
[(Fun
    { fd_namespace =
      { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
        ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
        ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; ns_disable_xhp_element_mangling = false };
      fd_file_attributes = []; fd_mode = Mstrict;
      fd_fun =
      { f_span = [3:1-5:2]; f_readonly_this = None; f_annotation = (); 
        f_readonly_ret = None; f_ret = (((int, int, int)), (Some ([3:37-52], (Htuple [([3:38-41], (Hprim Tint)); ([3:43-46], (Hprim Tint)); ([3:48-51], (Hprim Tint))]))));
        f_name = ([3:10-26], "\\__return_3_tuple"); f_tparams = []; f_where_constraints = []; 
        f_variadic = FVnonVariadic;
        f_params =
        [{ param_annotation = ([3:32-34], bool); param_type_hint = ((bool), (Some ([3:27-31], (Hprim Tbool)))); 
           param_is_variadic = false; param_pos = [3:32-34]; param_name = "$x"; 
           param_expr = None; param_readonly = None; param_callconv = None; 
           param_user_attributes = []; param_visibility = None }
          ];
        f_ctxs = None; f_unsafe_ctxs = None;
        f_body =
        { fb_ast = [([4:3-25], (Return (Some (([4:10-24], (int, int, int)), (Tuple [(([4:16-17], int), (Int "1")); (([4:19-20], int), (Int "1")); (([4:22-23], int), (Int "1"))])))))];
          fb_annotation = () };
        f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
        f_doc_comment = None }
      });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [7:1-9:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = (((int, int)), (Some ([7:37-47], (Htuple [([7:38-41], (Hprim Tint)); ([7:43-46], (Hprim Tint))])))); 
         f_name = ([7:10-26], "\\__return_2_tuple"); f_tparams = []; 
         f_where_constraints = []; f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = ([7:32-34], bool); param_type_hint = ((bool), (Some ([7:27-31], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [7:32-34]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = None; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body = { fb_ast = [([8:3-22], (Return (Some (([8:10-21], (int, int)), (Tuple [(([8:16-17], int), (Int "1")); (([8:19-20], int), (Int "1"))])))))]; fb_annotation = () }; 
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [11:1-13:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([11:35-39], (Hprim Tvoid)))); 
         f_name = ([11:10-24], "\\assign_list_ok"); f_tparams = []; f_where_constraints = []; 
         f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = ([11:30-32], bool); param_type_hint = ((bool), (Some ([11:25-29], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [11:30-32]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = None; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([12:3-43],
             (Expr
                (([12:3-42], (int, int, int)),
                 (Binop ((Eq None),
                    (([12:3-19], (int, int, int)), (List [(([12:8-10], int), (Lvar ([12:8-10], $u))); (([12:12-14], int), (Lvar ([12:12-14], $v))); (([12:16-18], int), (Lvar ([12:16-18], $w)))])),
                    (([12:22-42], (int, int, int)),
                     (Call ((([12:22-38], (function(bool $x): (int, int, int))), (Id ([12:22-38], "\\__return_3_tuple"))), [], [(([12:39-41], bool), (Lvar ([12:39-41], $x)))], None)))
                    )))))
             ];
           fb_annotation = () };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       });
  (Fun
     { fd_namespace =
       { Namespace_env.ns_ns_uses = <opaque>; ns_class_uses = <opaque>; 
         ns_record_def_uses = <opaque>; ns_fun_uses = <opaque>; ns_const_uses = <opaque>; 
         ns_name = None; ns_auto_ns_map = []; ns_is_codegen = false; 
         ns_disable_xhp_element_mangling = false };
       fd_file_attributes = []; fd_mode = Mstrict;
       fd_fun =
       { f_span = [15:1-18:2]; f_readonly_this = None; f_annotation = (); 
         f_readonly_ret = None; f_ret = ((void), (Some ([15:36-40], (Hprim Tvoid)))); 
         f_name = ([15:10-25], "\\assign_list_bad"); f_tparams = []; 
         f_where_constraints = []; f_variadic = FVnonVariadic;
         f_params =
         [{ param_annotation = ([15:31-33], bool); param_type_hint = ((bool), (Some ([15:26-30], (Hprim Tbool)))); 
            param_is_variadic = false; param_pos = [15:31-33]; param_name = "$x"; 
            param_expr = None; param_readonly = None; param_callconv = None; 
            param_user_attributes = []; param_visibility = None }
           ];
         f_ctxs = None; f_unsafe_ctxs = None;
         f_body =
         { fb_ast =
           [([17:3-43],
             (Expr
                (([17:3-42], (int, int)),
                 (Binop ((Eq None),
                    (([17:3-19], (int, int)),
                     (List [(([17:8-10], nothing), (Lvar ([17:8-10], $u))); (([17:12-14], nothing), (Lvar ([17:12-14], $v))); (([17:16-18], nothing), (Lvar ([17:16-18], $w)))])),
                    (([17:22-42], (int, int)),
                     (Hole (
                        (([17:22-42], (int, int)),
                         (Call ((([17:22-38], (function(bool $x): (int, int))), (Id ([17:22-38], "\\__return_2_tuple"))), [], [(([17:39-41], bool), (Lvar ([17:39-41], $x)))], None))),
                        ((int, int)), ({suggest:nothing}), Typing)))
                    )))))
             ];
           fb_annotation = () };
         f_fun_kind = FSync; f_user_attributes = []; f_external = false; 
         f_doc_comment = None }
       })