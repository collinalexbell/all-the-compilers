=== IFC analysis results for binop.php
Analyzing \add:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $x -> <$x>; $y -> <$y> }
* Final environment:
  Deps: {}
  Constraints:
    [8:3-18] $x < arith, $y < arith, arith < ret
  Locals:
    { $x -> <$x>; $y -> <$y> }

Analyzing \qq:
* pc: pc
* This: None
* Return: \A<A, A_lump>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $x -> (null<$x> | \B<B, B_lump>); $y -> \A<A'1, A_lump'1> }
* Final environment:
  Deps: {}
  Constraints:
    [13:3-19]
      $x < $x'1, B_lump = B_lump'1, B < B'1, $x'1 < nullqq,
      A_lump'2 = B_lump'1, B'1 < A'2, A_lump'1 = A_lump'2, A'1 < A'2,
      nullqq < A'2, A_lump = A_lump'2, A'2 < A
  Locals:
    { $x -> (null<$x'1> | \B<B'1, B_lump'1>); $y -> \A<A'1, A_lump'1> }

Analyzing \le_datetime:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $x -> \DateTime<DateTime, DateTime_lump>;
    $y -> \DateTime<DateTime'1, DateTime_lump'1> }
* Final environment:
  Deps: {}
  Constraints:
    [18:3-19]
      DateTime < cmp, DateTime'1 < cmp, DateTime_lump < cmp,
      DateTime_lump'1 < cmp, cmp < ret
  Locals:
    { $x -> \DateTime<DateTime, DateTime_lump>;
      $y -> \DateTime<DateTime'1, DateTime_lump'1> }

Analyzing \diff:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $x -> \B<B, B_lump>; $y -> \A<A, A_lump> }
* Final environment:
  Deps: {}
  Constraints:
    [23:3-19] A < cmp, A_lump < cmp, B < cmp, B_lump < cmp, cmp < ret
  Locals:
    { $x -> \B<B, B_lump>; $y -> \A<A, A_lump> }

Analyzing \eqeqeq:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $x -> \B<B, B_lump>; $y -> \A<A, A_lump> }
* Final environment:
  Deps: {}
  Constraints:
    [28:3-20] A < cmp, B < cmp, cmp < ret
  Locals:
    { $x -> \B<B, B_lump>; $y -> \A<A, A_lump> }

Analyzing \is_:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $x ->
    (\A<A, A_lump> | <$x> |
       shape({ (Typing_defs_core.TSFlit_str ([32:31-36], "fld")) ->
               <$x'2, <$x'1>> })) }
* Final environment:
  Deps: {}
  Constraints:
    [33:3-18]
      A_lump = A_lump'1, A < A'1, $x < $x'3, $x'2 < $x'5, $x'1 < $x'4,
      $x'3 < tag, $x'4 < tag, $x'5 < tag, A'1 < tag, tag < ret
  Locals:
    { $x ->
      (\A<A'1, A_lump'1> | <$x'3> |
         shape({ (Typing_defs_core.TSFlit_str ([32:31-36], "fld")) ->
                 <$x'5, <$x'4>> })) }

