=== IFC analysis results for vec.php
Analyzing \empty:
* pc: pc
* This: None
* Return: vec<<key> => <ret>; |len|>
* Exception: \Exception<exn, exn_lump>
* Params:
  {}
* Final environment:
  Deps: {}
  Constraints:
    [5:3-16] key'1 < key, Vec < ret, len'1 < len
  Locals:
    {}

Analyzing \collection:
* pc: pc
* This: None
* Return: vec<<key> => <ret>; |len|>
* Exception: \Exception<exn, exn_lump>
* Params:
  {}
* Final environment:
  Deps: {}
  Constraints:
    [10:3-29] lit < Vec, lit'1 < Vec, key'1 < key, Vec < ret, len'1 < len
  Locals:
    {}

Analyzing \add:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $vec -> vec<<key> => <$vec>; |len|> }
* Final environment:
  Deps: {}
  Constraints:
    [15:3-14]
      key < key'1, $vec < arr, len < len'1, lit < arr, key'1 < key'2,
      arr < $vec'1, len'1 < len'2
  Locals:
    { $vec -> vec<<key'2> => <$vec'1>; |len'2|> }

Analyzing \retElem:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $vec -> vec<<key> => <$vec>; |len|> }
* Final environment:
  Deps: {}
  Constraints:
    [20:3-18]
      lit < key, OutOfBoundsException_lump = exn_lump,
      OutOfBoundsException < exn, len < exn, lit < exn, $vec < ret,
      len < ret, lit < ret
  Locals:
    { $vec -> vec<<key> => <$vec>; |len|> }
    pc: len, lit

