
tests/suite/typecheck/fail/FD2.hs:26:34: error:
    Couldn't match expected type ‘e1’ with actual type ‘e’
      ‘e’ is a rigid type variable bound by
          the type signature for
            foldr1 :: Elem a e => (e -> e -> e) -> a -> e
          at tests/suite/typecheck/fail/FD2.hs:21:13
      ‘e1’ is a rigid type variable bound by
           the type signature for
             mf :: Elem a e1 => e1 -> Maybe e1 -> Maybe e1
           at tests/suite/typecheck/fail/FD2.hs:24:18
    Relevant bindings include
      y :: e1 (bound at tests/suite/typecheck/fail/FD2.hs:26:23)
      x :: e1 (bound at tests/suite/typecheck/fail/FD2.hs:26:15)
      mf :: e1 -> Maybe e1 -> Maybe e1
        (bound at tests/suite/typecheck/fail/FD2.hs:25:12)
      f :: e -> e -> e (bound at tests/suite/typecheck/fail/FD2.hs:22:10)
      foldr1 :: (e -> e -> e) -> a -> e
        (bound at tests/suite/typecheck/fail/FD2.hs:22:3)
    In the first argument of ‘Just’, namely ‘(f x y)’
    In the expression: Just (f x y)
