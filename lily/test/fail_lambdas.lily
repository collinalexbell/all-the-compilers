import test

var t = test.t

t.scope(__file__)

t.interpret_for_error("Error when unable to infer a lambda's argument type.",
    """\
    SyntaxError: Cannot infer type of 'a'.\n    \
        from test\/[subinterp]:5:\
    """,
    """\
    define f[A](g: Function(A => A)) {

    }

    f((|a| a))
    """)

t.interpret_for_error("Forbid empty lambdas.",
    """\
    SyntaxError: Unexpected token 'end of lambda'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    var v = (|| )
    """)

t.interpret_for_error("Forbid lambdas from having default arguments.",
    """\
    SyntaxError: Expected 'a label', not '*'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    var v = (|a: *Integer=10| a )
    """)

t.interpret_for_error("Forbid raise within a lambda.",
    """\
    SyntaxError: 'raise' not allowed in a lambda.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    var v = (|| raise ValueError("") )
    """)

t.interpret_for_error("Forbid return within a lambda.",
    """\
    SyntaxError: 'return' not allowed in a lambda.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    var v = (|| return )
    """)

t.interpret_for_error("Lambda args don't finish with '|'.",
    """\
    SyntaxError: Expected either ',' or '|', not '+'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    var v: Function(Integer) = (|a + return )
    """)

t.interpret_for_error("')' is invalid if expecting a value.",
    """\
    SyntaxError: Unexpected token ')'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    var v = !)
    """)

t.interpret_for_error("Unterminated lambda after # comment.",
    """\
    SyntaxError: Unterminated lambda (started at line 2).\n    \
        from test\/[subinterp]:6:\
    """,
    """\

    var v = (||
        var w
        =
        #
    """)

t.interpret_for_error("Lambdas must not be marked as returning 'self'.",
    """\
    SyntaxError: Lambdas cannot return the self type (not a class method).\n    \
        from test\/[subinterp]:8:\
    """,
    """\
    class Abc {
        public define f: self {  }
        public define g[A](a: Function(Abc => A), b: Function( => A)): Function( => A) {
            return b
        }

        public define h {
            g(f, (|| 10 ))()()
        }
    }

    Abc().h()
    """)
