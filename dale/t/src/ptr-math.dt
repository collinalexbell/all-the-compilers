(import cstdio)

(def main
  (fn extern-c int (void)
    (def intp      (var auto (p int) 
        (cast (malloc (* (cast 10 size) (sizeof int))) (p int))))
    (def otherintp (var auto (p int) intp))
    (setf ($ intp 0) 0)    
    (setf ($ intp 1) 1)    
    (setf ($ intp 2) 2)    
    (setf ($ intp 3) 3)    
    (setf ($ intp 4) 4)    
    (setf ($ intp 5) 5)    
    (setf ($ intp 6) 6)    
    (setf ($ intp 7) 7)    
    (setf ($ intp 8) 8)    
    (setf ($ intp 9) 9)

    (printf "%d %d\n" (@ (p+ intp 0)) (@ (p+ intp 1)))
    (setv otherintp (p+ intp 5))
    (printf "%d %d\n" (@ (p+ otherintp 0)) (@ (p+ otherintp 1)))
    (setv otherintp (p- otherintp 2))
    (printf "%d %d\n" (@ (p+ otherintp 0)) (@ (p+ otherintp 1)))
    
    (if (p< intp otherintp)
        (printf "yes\n")
        (printf "no\n"))
    (if (p<= intp otherintp)
        (printf "yes\n")
        (printf "no\n"))
    (if (p> intp otherintp)
        (printf "no\n")
        (printf "yes\n"))
    (if (p>= intp otherintp)
        (printf "no\n")
        (printf "yes\n"))

    0))
