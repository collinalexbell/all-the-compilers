(import cstdio)
(import derivations)
(import concepts)

(using-namespace std.concepts

(def mys (struct intern ((a int) (b int) (c int))))

(def init 
  (fn intern bool ((dst (ref mys)) (a int) (b int) (c int))
    (setf (:@ dst a) a)
    (setf (:@ dst b) b)
    (setf (:@ dst c) c)
    true))
  
(def setf-copy-init (fn intern bool ((dst (p mys)) (src (p mys)))
  (printf "Called overridden copy\n")
  (setf (:@ dst a) (@:@ src a))
  (setf (:@ dst b) (@:@ src b))
  (setf (:@ dst c) (@:@ src c))
  true))

(def setf-copy-assign (fn intern bool ((dst (p mys)) (src (p mys)))
  (setf-copy-init dst src)))

(implement PreferRefs mys)
(implement Type mys)
(implement Struct mys)
(mfor Op (= != < <= > >=)
  (instantiate Op mys))

(def main (fn extern-c int (void)
  (def m (var auto mys (init m 1 2 3)))
  (def n (var auto mys (init n 1 2 4)))
  (printf "m =  n? (%d)\n" (= m n))
  (printf "m != n? (%d)\n" (!= m n))
  (printf "m <  n? (%d)\n" (< m n))
  (printf "m <= n? (%d)\n" (<= m n))
  (printf "m >  n? (%d)\n" (> m n))
  (printf "m >= n? (%d)\n" (>= m n))
  0))

)
