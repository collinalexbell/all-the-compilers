(import macros)
(import vector)

(std.concepts.instantiate Vector int)

(def printv
  (fn intern void ((vecp (ref (Vector int))))
    (let ((b \ (begin (@ vecp)))
          (e \ (end (@ vecp))))
      (for true (!= b e) (setv b (successor b))
        (printf "%d\n" (@ (source b)))))
    (return)))

(def main
  (fn extern-c int (void)
    (let ((vec  (Vector int) (init vec 10)))
      (printv vec)
      (insert vec (begin vec) 100)
      (insert vec (begin vec) 200)
      (insert vec (begin vec) 300)
      (printf "Three elements\n")
      (printv vec)
      (erase vec (successor (begin vec)))
      (printf "First and third element\n")
      (printv vec)
      (erase vec (begin vec))
      (printf "Third element\n")
      (printv vec)
      (erase vec (begin vec))
      (erase vec (begin vec))
      (erase vec (begin vec))
      (erase vec (begin vec))
      (printf "No elements\n")
      (printv vec)
    0)))

