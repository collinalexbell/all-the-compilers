(import cstdio)
(import unistd)
(import macros)
(import unique-ptr)
(import vector)
(import derivations)
(import algorithms)

(std.concepts.instantiate UniquePtr int)

(def = (fn intern bool ((a (const (p int))) (b (const (p int))))
  (= (@ a) (@ b))))
(def < (fn intern bool ((a (const (p int))) (b (const (p int))))
  (< (@ a) (@ b))))
(def = (fn extern bool ((a (ref (const (UniquePtr int))))
                        (b (ref (const (UniquePtr int)))))
  (= (core-@:@ a pointer) (core-@:@ b pointer))))
(def < (fn extern bool ((a (ref (const (UniquePtr int))))
                        (b (ref (const (UniquePtr int)))))
  (< (core-@:@ a pointer) (core-@:@ b pointer))))

(std.concepts.instantiate relations (UniquePtr int))
(std.concepts.instantiate swap (UniquePtr int))
(std.concepts.implement Swappable (UniquePtr int))
(std.concepts.implement EqualityComparable (UniquePtr int))
(std.concepts.implement LessThanComparable (UniquePtr int))

(std.concepts.instantiate Vector (UniquePtr int))

(def main
  (fn extern-c int (void)
    (let ((vec    (Vector (UniquePtr int)) (init vec 1))
          (vec2   (Vector (UniquePtr int)) (init vec 1))
          (myint1 \ (malloc' 1 int))
          (myptr1 (UniquePtr int))
          (myint2 \ (malloc' 1 int))
          (myptr2 (UniquePtr int)))
      (setf myint1 1)
      (init myptr1 myint1)
      (setf myint2 2)
      (init myptr2 myint2)

      (push-back vec (move myptr1))
      (push-back vec (move myptr2))
      (setv vec2 vec)
      0)))
